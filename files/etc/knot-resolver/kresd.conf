
net.listen('127.0.0.1', 2053)

modules = {
	'stats',
	'nsid',
	'serve_stale',
	'hints > iterate'
}

trust_anchors.remove('.')
modules.unload('policy')
modules.unload('ta_signal_query')
modules.unload('ta_sentinel')
modules.unload('ta_update')
modules.unload('priming')

cache.size = 2 * MB

reorder_RR(true)

hints.root({
	['ns2.opennic.glue'] = { '161.97.219.84', '2001:470:4212:10:0:100:53:10' },
	['ns4.opennic.glue'] = { '163.172.168.171' },
	['ns5.opennic.glue'] = { '94.103.153.176', '2a02:990:219:1:ba:1337:cafe:3' },
	['ns6.opennic.glue'] = { '207.192.71.13' },
	['ns8.opennic.glue'] = { '178.63.116.152', '2a01:4f8:141:4281::999' },
	['ns9.opennic.glue'] = { '51.77.227.84' },
	['ns11.opennic.glue'] = { '51.75.173.177' },
	['ns12.opennic.glue'] = { '79.124.7.81' },
	['ns13.opennic.glue'] = { '144.76.103.143', '2a01:4f8:192:43a5::2' }
})

nsid.name(hostname())

if env.INFLUXDB_PROTO and env.INFLUXDB_HOST and env.INFLUXDB_USER and env.INFLUXDB_PASS and env.INFLUXDB_DATABASE and env.INFLUXDB_PORT then
	require "socket"
	local http = require("socket.http")
	function write_stats_to_influxdb()
		-- print(table.show(stats.list()))
		line = {}
		for k, v in pairs(stats.list())
		do
			table.insert(line, k:gsub("%.", "_") .. "=" .. v .. "i")
		end
		line = "kresd,hostname=" .. hostname() .. ",version=" .. package_version() .. " " .. table.concat(line, ",") .. " " .. string.format("%.f", socket.gettime() * 1000000000)
		http.request(env.INFLUXDB_PROTO .. "://" .. env.INFLUXDB_USER .. ":" .. env.INFLUXDB_PASS .. "@" .. env.INFLUXDB_HOST .. ":" .. env.INFLUXDB_PORT .. "/write?db=" .. env.INFLUXDB_DATABASE, line)
	end
	print("Sending InfluxDB metrics to " .. env.INFLUXDB_PROTO .. "://" .. env.INFLUXDB_USER .. ":[REDACTED]@" .. env.INFLUXDB_HOST .. ":" .. env.INFLUXDB_PORT .. "/write?db=" .. env.INFLUXDB_DATABASE)
	worker.coroutine(function ()
		event.recurrent(1 * sec, function (e)
			write_stats_to_influxdb()
		end)
	end)
end
